[{"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/index.js":"1","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/App.js":"2","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/reportWebVitals.js":"3","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/NavbarHome.js":"4","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js":"5","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/Web3Client.js":"6","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/AddAuctionModal.js":"7","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/SuccessAlertModal.js":"8"},{"size":560,"mtime":1655754217789,"results":"9","hashOfConfig":"10"},{"size":577,"mtime":1655759937796,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1655754217790,"results":"12","hashOfConfig":"10"},{"size":1273,"mtime":1655759925427,"results":"13","hashOfConfig":"10"},{"size":4417,"mtime":1655759914910,"results":"14","hashOfConfig":"10"},{"size":5045,"mtime":1655842661418,"results":"15","hashOfConfig":"10"},{"size":5222,"mtime":1655839054870,"results":"16","hashOfConfig":"10"},{"size":1246,"mtime":1655759930537,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ate7j0",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/index.js",[],["37","38"],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/App.js",[],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/reportWebVitals.js",[],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/NavbarHome.js",[],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js",["39","40","41","42"],"import React, { useState, useEffect } from 'react';\nimport { Container, Table, Button, Card, Row, Col } from 'react-bootstrap';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport { getAuctionData, purchaseProduct } from './Web3Client';\n\n// export default function TableProduct({addr}) {\n//   let [productData, setProductData] = useState([]);\n//   let [transactionData, setTransactionData] = useState({});\n//   const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n\n//   async function getTableData(){\n//     let products = await getProductData();\n//     setProductData(products);\n//   }\n\n//   useEffect(() => {\n//     getTableData();\n//   },[]);\n\n//   return (\n//     <Container className=\"mt-5\">\n//       <Table striped bordered hover >\n//           <thead>\n//               <tr>\n//               <th>No.</th>\n//               <th>Product Name</th>\n//               <th>Price</th>\n//               <th>Seller</th>\n//               <th>Buyer</th>\n//               <th>Timestamp</th>\n//               <th>Buy</th>\n//               </tr>\n//           </thead>\n//           <tbody>\n//             {productData.map(item => {\n//               return <tr key={item.id}>\n//                 <td>{item.id}</td>\n//                 <td>{item.product_name}</td>\n//                 <td>{item.product_price} Eth(IDR {item.product_idr})</td>\n//                 <td>{item.seller}</td>\n//                 <td>{item.status_buy === false ? \"Available\" : item.owner}</td>\n//                 <td>{item.timestamp}</td>\n//                 <td>{!item.status_buy ?\n//                 <Button variant=\"success\" name={item.id} value={item.product_price} onClick={async (event) => {\n//                   let receipt = await purchaseProduct(item.id, event.target.value, addr);\n//                   setTransactionData(receipt);\n//                   setShowAlertSuccess(true);\n//                 }}>Buy!</Button> :\n//                 <Button variant=\"secondary\" disabled>Buy!\n//                 </Button>\n//                 }</td>\n//               </tr>\n//             })}\n//           </tbody>\n//       </Table>\n//       <SuccessAlertModal show={showAlertSuccess} handleClose={() => {setShowAlertSuccess(false); window.location.reload();}} transaction={transactionData}/>\n//     </Container>\n//   )\n// }\n\nexport default function MainMenu({ addr }) {\n  //   let [productData, setProductData] = useState([]);\n  let [auctionData, setAuctionData] = useState([]);\n\n  let [transactionData, setTransactionData] = useState({});\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n\n  //   async function returnAllAuction(){\n  //     let products = await getProductData();\n  //     setProductData(products);\n  //   }\n\n  // async function getListingData() {\n  //   let auctions = await getAuctionData();\n  //   let reversed = auctions.reverse();\n\n  //   setAuctionData(auctions);\n  // }\n\n  async function getListingData() {\n    let auctions = await getAuctionData();\n    let reversed = auctions.reverse();\n\n    setAuctionData(reversed);\n  }\n\n  useEffect(() => {\n    getListingData(); // getTableData\n  }, []);\n\n  console.log(auctionData);\n\n  return (\n    <Container className='mt-5'>\n      <SuccessAlertModal\n        show={showAlertSuccess}\n        handleClose={() => {\n          setShowAlertSuccess(false);\n          window.location.reload();\n        }}\n        transaction={transactionData}\n      />\n      <Row style={{ padding: '10px' }}>\n        {auctionData.map((item) => {\n          return (\n            <Col style={{ padding: '10px' }}>\n              <Card style={{}} key={item.auctionId}>\n                <Card.Header as='h5'>{item.assetName}</Card.Header>\n                <Card.Body>\n                  <Card.Text>Description: {item.assetDetail}</Card.Text>\n                  <Card.Text>Asset Owner: {item.assetOwner}</Card.Text>\n                  <Card.Text>Contract Address: {item.startPrice}</Card.Text>\n                  <Card.Text>Start Price: {item.startPrice}</Card.Text>\n                  {/* <Button variant='primary'>Go somewhere</Button> */}\n                  {/* <Button\n                    variant='primary'\n                    type='submit'\n                    onClick={() => handleAddAuction(assetOwner)}>\n                    Add Asset\n                  </Button> */}\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/Web3Client.js",["43"],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/AddAuctionModal.js",["44"],"import React, { useRef, useState } from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport { createAuction } from './Web3Client';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport Web3 from 'web3';\n\nexport default function AddAuctionModal({\n  show,\n  handleClose,\n  assetOwner,\n  ownerDeposite,\n}) {\n  let auctionName = useRef();\n  let auctionDesc = useRef();\n  let auctionStartPrice = useRef();\n  let auctionDuration = useRef();\n  //let ownerDeposite = useRef();\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  const [convertETH, setConvertETH] = useState(0);\n  let [responseTransaction, setResponseTransaction] = useState({});\n\n  async function handleAddAuction(assetOwner, ownerDeposite) {\n    const startPriceAuction = auctionStartPrice.current.value;\n    const nameAuction = auctionName.current.value;\n    const detailAuction = auctionDesc.current.value;\n    const durationAuction = auctionDuration.current.value;\n    // const depositeOwner = ownerDeposite.current.value;\n    let priceToEth = (startPriceAuction * 4.665454319592892e-8).toFixed(10);\n    let priceToWei = Web3.utils.toWei(priceToEth.toString(), 'ether');\n    // alert(priceToEth);\n    // alert(priceToWei);\n\n    //  console.log(priceToEth);\n    //  console.log(priceToWei);\n    let auctionData = await createAuction(\n      nameAuction,\n      detailAuction,\n      startPriceAuction,\n      assetOwner,\n      ownerDeposite,\n      durationAuction\n    ).catch((err) => {\n      if (err) {\n        // alert(err);\n        console.log(err);\n        // window.location.reload();\n      }\n    });\n    handleClose();\n    setShowAlertSuccess(true);\n    setResponseTransaction(auctionData);\n    return auctionData;\n  }\n\n  function handleChangeConversion(event) {\n    event.preventDefault();\n    let idrValue = event.target.value;\n    let ethValue = idrValue * 4.665454319592892e-8;\n    return setConvertETH(ethValue);\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Asset detail</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleAddAuction}>\n            <Form.Group className='mb-3' controlId='auction_name'>\n              <Form.Label>Asset Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='e.g Women Shoes'\n                autoFocus\n                ref={auctionName}\n              />\n            </Form.Group>\n            <Form.Group className='mb-3' controlId='auction_desc'>\n              <Form.Label>Auction Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='e.g Size, Colour, Material'\n                autoFocus\n                ref={auctionDesc}\n              />\n            </Form.Group>\n            <Form.Group className='mb-3' controlId='auction_desc'>\n              <Form.Label>Submit Deposite</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='The auction deposite amount must be equal to the start price'\n                autoFocus\n                ref={ownerDeposite}\n              />\n            </Form.Group>\n            <Form.Group className='mb-3' controlId='auction_desc'>\n              <Form.Label>Auction Duration</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='in minute'\n                autoFocus\n                ref={auctionDuration}\n              />\n            </Form.Group>\n            <Form.Group className='mb-3' controlId='auction_start_price'>\n              <Form.Label>Product Start Price</Form.Label>\n              <div className='input-group'>\n                <div className='input-group-append'>\n                  <span className='input-group-text'>IDR</span>\n                </div>\n                <input\n                  className='form-control'\n                  type='number'\n                  placeholder='Amount in Rp.'\n                  min={0}\n                  ref={auctionStartPrice}\n                  onChange={(e) => handleChangeConversion(e)}\n                />\n              </div>\n            </Form.Group>\n          </Form>\n          <div className='input-group'>\n            <div className='input-group-append'>\n              <span className='input-group-text'>ETH(Estimated)</span>\n            </div>\n            <input\n              className='form-control'\n              type='number'\n              placeholder='Please input IDR value'\n              value={convertETH || 0}\n              readOnly\n            />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button\n            variant='primary'\n            type='submit'\n            onClick={() => handleAddAuction(assetOwner)}>\n            Add Asset\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <SuccessAlertModal\n        show={showAlertSuccess}\n        handleClose={() => {\n          setShowAlertSuccess(false);\n          //window.location.reload();\n        }}\n        transaction={responseTransaction}\n      />\n    </>\n  );\n}\n","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/SuccessAlertModal.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":21,"nodeType":"51","messageId":"52","endLine":2,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":2,"column":28,"nodeType":"51","messageId":"52","endLine":2,"endColumn":34},{"ruleId":"49","severity":1,"message":"54","line":4,"column":26,"nodeType":"51","messageId":"52","endLine":4,"endColumn":41},{"ruleId":"49","severity":1,"message":"55","line":65,"column":25,"nodeType":"51","messageId":"52","endLine":65,"endColumn":43},{"ruleId":"49","severity":1,"message":"56","line":99,"column":9,"nodeType":"51","messageId":"52","endLine":99,"endColumn":21},{"ruleId":"49","severity":1,"message":"57","line":29,"column":9,"nodeType":"51","messageId":"52","endLine":29,"endColumn":19},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'purchaseProduct' is defined but never used.","'setTransactionData' is assigned a value but never used.","'auction_time' is assigned a value but never used.","'priceToWei' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]