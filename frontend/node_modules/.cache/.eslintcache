[{"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/index.js":"1","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/App.js":"2","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/reportWebVitals.js":"3","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js":"4","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/Web3Client.js":"5","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/AddAuctionModal.js":"6","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/SuccessAlertModal.js":"7","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/home.js":"8"},{"size":560,"mtime":1656104805030,"results":"9","hashOfConfig":"10"},{"size":559,"mtime":1656357281659,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1656104805031,"results":"12","hashOfConfig":"10"},{"size":4368,"mtime":1656621819844,"results":"13","hashOfConfig":"10"},{"size":4870,"mtime":1656871584441,"results":"14","hashOfConfig":"10"},{"size":4197,"mtime":1656872697439,"results":"15","hashOfConfig":"10"},{"size":1477,"mtime":1656104805029,"results":"16","hashOfConfig":"10"},{"size":2935,"mtime":1656104805030,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ate7j0",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/index.js",[],["39","40"],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/App.js",[],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/reportWebVitals.js",[],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js",["41","42","43","44"],"import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Container,\n  Table,\n  Button,\n  Card,\n  Row,\n  Col,\n  Stack,\n  Form,\n} from 'react-bootstrap';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport { bid, getAuctionData } from './Web3Client';\n\nexport default function MainMenu({ addr, highestBidder, highestBid }) {\n  //let highestBid2 = useRef();\n  //   let [productData, setProductData] = useState([]);\n  let [auctionData, setAuctionData] = useState([]);\n  let [bidData, setBidData] = useState([]);\n  // let [biddingListData, setBiddingList] = useState();\n  let [transactionData, setTransactionData] = useState({});\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n\n  async function getListingData() {\n    let auctions = await getAuctionData();\n    let reversed = auctions.reverse();\n\n    setAuctionData(reversed);\n  }\n\n  async function handleAddBid(highestBidder) {\n    let bidData = await bid(highestBidder, highestBid).catch((err) => {\n      if (err) {\n        // alert(err);\n        console.log(err);\n        // window.location.reload();\n      }\n    });\n    return bidData;\n  }\n  // async function getBiddingListData() {\n  //   let biddingList = await biddingList();\n\n  //   setBiddingList(biddingList);\n  // }\n\n  useEffect(() => {\n    getListingData(); // getTableData\n    // getBiddingListData();\n  }, []);\n\n  console.log(auctionData);\n  console.log('bid data:' + bidData);\n  // console.log('bidding id :' + biddingListData);\n\n  return (\n    <Container\n      className='mt-4'\n      style={{\n        backgroundColor: '#494978',\n        borderRadius: '8px',\n      }}>\n      <SuccessAlertModal\n        show={showAlertSuccess}\n        handleClose={() => {\n          setShowAlertSuccess(false);\n          window.location.reload();\n        }}\n        transaction={transactionData}\n      />\n\n      <Row style={{ padding: '10px' }}>\n        {auctionData.map((item) => {\n          return (\n            <Col style={{ padding: '10px' }}>\n              <Card\n                style={{ backgroundColor: '#F6F6FE', color: 'black' }}\n                key={item.auctionId}>\n                <Card.Header as='h5'>{item.assetName}</Card.Header>\n                <Card.Body>\n                  <Card.Text>Description: {item.assetDetail}</Card.Text>\n                  <Card.Text>Asset Owner: {item.assetOwner}</Card.Text>\n                  <Card.Text>Start Price: {item.startPrice}</Card.Text>\n                  <Card.Text>\n                    Auction Duration: {item.auctionDuration}\n                  </Card.Text>\n                  <Stack\n                    direction='horizontal'\n                    gap={3}\n                    style={{\n                      paddingTop: '5px',\n                      paddingBottom: '30px',\n                    }}>\n                    <Form onSubmit={handleAddBid}>\n                      <Form.Group className='mb-3' controlId='bid'>\n                        <Form.Control\n                          type='number'\n                          className='me-auto'\n                          placeholder='Place Your Bid'\n                          ref={highestBid}\n                        />\n                      </Form.Group>\n                    </Form>\n\n                    {/* <Form.Control\n                      type='number'\n                      className='me-auto'\n                      placeholder='Place Your Bid'\n                    /> */}\n                    <Button\n                      variant='warning'\n                      onClick={() => handleAddBid(highestBidder)}>\n                      Bid\n                    </Button>\n                    <p>{bidData}</p>\n                  </Stack>\n                  <Stack direction='horizontal' gap={3}>\n                    <Button variant='danger'>Finalize Auction</Button>\n                    <div className='vr' />\n                    <Button variant='outline-danger'>Withdraw</Button>\n                  </Stack>\n\n                  {/* <Button variant='primary'>Go somewhere</Button> */}\n                  {/* <Button\n                    variant='primary'\n                    type='submit'\n                    onClick={() => handleAddAuction(assetOwner)}>\n                    Add Asset\n                  </Button> */}\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/Web3Client.js",["45"],"import Web3 from 'web3';\nimport MainAuction from 'contracts/MainAuction.json';\nimport BiddingContract from 'contracts/Bidding.json';\nimport AuctionContract from 'contracts/AuctionContract.json';\n\nlet selectedAccount;\n\nexport const init = async () => {\n  let provider = window.ethereum;\n\n  if (typeof provider !== 'undefined') {\n    provider.on('accountsChanged', () => window.location.reload());\n    return provider\n      .request({ method: 'eth_requestAccounts' })\n      .then((accounts) => {\n        selectedAccount = accounts[0];\n        return selectedAccount;\n      })\n      .catch((err) => {\n        console.log(err);\n        return;\n      });\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n  } else {\n    console.log(\n      'Non-Ethereum browser detected. You should consider trying MetaMask!'\n    );\n  }\n};\n\n// export const getBiddingListData = async () => {\n//   let provider = window.ethereum;\n//   let mainAuctionContract;\n//   const web3 = new Web3(provider);\n//   const networkId = await web3.eth.net.getId();\n// };\n\nexport const getAuctionData = async () => {\n  let provider = window.ethereum;\n  let auctionContract; // marketContract\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  let auctions = [];\n\n  auctionContract = new web3.eth.Contract(\n    AuctionContract.abi,\n    AuctionContract.networks[networkId].address\n  );\n\n  let auctionCount = await auctionContract.methods.auctionCount().call();\n  // Load products\n  for (var i = 1; i <= auctionCount; i++) {\n    const auction = await auctionContract.methods.auctions(i).call();\n    //  let millis = parseFloat(auction.timestamp) * 1000;\n    let startPrice = web3.utils.fromWei(auction.startPrice.toString(), 'ether');\n    // let bidding2 = await mainAuctionContract.methods.biddingList(i).call();\n    //  let auction_time = new Date(millis).toLocaleString();\n\n    auctions.push({\n      auctionId: auction.id,\n      assetName: auction.assetName,\n      assetDetail: auction.assetDetail,\n      startPrice: startPrice,\n      assetOwner: auction.assetOwner,\n      //ownerDeposite: auction.ownerDeposite,\n      auctionDuration: auction.auctionDuration,\n      auctionStatus: auction.active,\n    });\n  }\n  return auctions;\n  // return mainAuctionContract.methods.auctions(1);\n};\n\nexport const createAuction = async (\n  assetName,\n  assetDetail,\n  startPrice,\n  assetOwner,\n  // ownerDeposite,\n  auctionDuration\n) => {\n  let provider = window.ethereum;\n  // let mainAuctionContract;\n  let auctionContract;\n  const web3 = new Web3(provider);\n  // const networkId = await web3.eth.net.getId();\n  const networkId = await web3.eth.net.getId();\n  let depositePrice = Web3.utils.fromWei(startPrice, 'wei');\n\n  auctionContract = new web3.eth.Contract(\n    AuctionContract.abi,\n    AuctionContract.networks[networkId].address\n  );\n  return auctionContract.methods\n    .createAuction(assetName, assetDetail, startPrice, auctionDuration)\n    .send({ from: assetOwner, value: depositePrice })\n    .then((auctionData) => {\n      return auctionData;\n    })\n    .catch((err) => {\n      return err.message;\n    });\n};\n\n// export const biddingList = async () => {\n//   let provider = window.ethereum;\n//   let mainAuctionContract;\n//   let biddingContract;\n//   const web3 = new Web3(provider);\n//   const networkId = await web3.eth.net.getId();\n\n//   let biddingList = [];\n\n//   mainAuctionContract = new web3.eth.Contract(\n//     MainAuction.abi,\n//     MainAuction.networks[networkId].address\n//   );\n\n//   biddingContract = new web3.eth.Contract(\n//     BiddingContract.abi,\n//     BiddingContract.networks[networkId].address\n//   );\n\n//   // return mainAuctionContract.methods\n//   //   .createAuction(assetName, assetDetail, startPrice, auctionDuration)\n//   //   .send({ from: assetOwner, value: depositePrice })\n//   //   .then((auctionData) => {\n//   //     return auctionData;\n//   //   })\n//   //   .catch((err) => {\n//   //     return err.message;\n//   //   });\n\n//   for (var j = 0; j <= biddingList; j++) {\n//     let bidding = await mainAuctionContract.methods.biddingList(j).call();\n\n//     biddingList.push({\n//       biddingId: bidding.Id,\n//     });\n//   }\n//   return biddingList;\n// };\n\nexport const bid = async (highestBidder, highestBid) => {\n  let provider = window.ethereum;\n  let biddingContract;\n  const web3 = new Web3(provider);\n  // const networkId = await web3.eth.net.getId();\n  const networkId = await web3.eth.net.getId();\n  // let highestBid2 = Web3.utils.fromWei(highestBid, 'wei');\n\n  biddingContract = new web3.eth.Contract(\n    BiddingContract.abi,\n    BiddingContract.networks[networkId].address\n  );\n  return biddingContract.methods\n    .bid()\n    .send({ from: highestBidder, value: highestBid })\n    .then((bidData) => {\n      return bidData;\n    })\n    .catch((err) => {\n      return err.message;\n    });\n};\n","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/AddAuctionModal.js",["46"],"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/SuccessAlertModal.js",["47"],"import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nexport default function SuccessAlertModal({ show, handleClose, transaction }) {\n  if (\n    transaction === 'MetaMask Tx Signature: User denied transaction signature.'\n  ) {\n    return alert(transaction);\n  } else {\n    return (\n      <>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          size='auto'\n          aria-labelledby='contained-modal-title-vcenter'\n          centered>\n          <Modal.Header closeButton>\n            {\n              <Modal.Title\n                className='ms-auto'\n                id='contained-modal-title-vcenter'>\n                Transaction Success!\n              </Modal.Title>\n            }\n          </Modal.Header>\n          {/* <Modal.Body closeButton>\n            <b>\n              Transaction has been successfully created. Transaction detail:{' '}\n            </b>{' '}\n            <br />\n            <ul>\n              <li>Transaction Hash: {transaction.transactionHash}</li>\n              <br />\n              <li>Asset Owner: {transaction.from}</li>\n            </ul>\n          </Modal.Body> */}\n          <Modal.Body closeButton>\n            <b>Your Asset is on Listing!</b>\n            <br />\n          </Modal.Body>\n          {/* \n          <Modal.Footer>\n            <Button variant='success' onClick={handleClose}>\n              Done\n            </Button>\n          </Modal.Footer> */}\n        </Modal>\n      </>\n    );\n  }\n}\n","/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/home.js",["48","49","50"],"import React, { useState } from 'react';\nimport { Navbar, Button, Container, Row, Col } from 'react-bootstrap';\nimport AddAuctionModal from './AddAuctionModal';\nimport auction from '../assets/auction.png';\nimport '../auction.css';\n\nexport default function Home({ addr }) {\n  const [showAddAuctionModal, setShowAddAuctionModal] = useState(false);\n\n  return (\n    <>\n      <section>\n        <div\n          style={{\n            backgroundColor: '#F6F6FE',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            height: '400px',\n          }}>\n          <div className='container' style={{ height: '550px' }}>\n            <div className='text-center justify-content-center align-self-center'>\n              <Row\n                style={{\n                  paddingTop: '100px',\n                }}>\n                <Col sm={4}>\n                  <img src={auction} style={{ maxHeight: '170px' }} />\n                  <div\n                    style={{\n                      fontSize: '3px',\n                    }}>\n                    {' '}\n                    Icons made by{' '}\n                    <a\n                      href='https://www.flaticon.com/authors/mynamepong'\n                      title='mynamepong'>\n                      {' '}\n                      mynamepong{' '}\n                    </a>{' '}\n                    from{' '}\n                    <a href='https://www.flaticon.com/' title='Flaticon'>\n                      www.flaticon.com'\n                    </a>\n                  </div>\n                </Col>\n                <Col sm={8}>\n                  <h2\n                    style={{\n                      fontFamily: 'Lobster Two',\n                      color: '#201D2F',\n                    }}>\n                    Welcome To\n                  </h2>\n                  <h1\n                    style={{\n                      fontFamily: 'Aleo',\n                      color: '#201D2F',\n                      paddingTop: '10px',\n                      paddingBottom: '10px',\n                    }}>\n                    E-Auction Decentralized Website\n                  </h1>\n                  <Button\n                    variant='dark'\n                    size='md'\n                    onClick={() => setShowAddAuctionModal(true)}>\n                    Create Auction\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* <Container\n        className='rounded'\n        style={{ backgroundColor: 'red', width: '500px', height: '50px' }}>\n        <p style={{ paddingTop: '10px', flex: 1, textAlign: 'center' }}>\n          Here Are Our Listing!\n        </p>\n      </Container> */}\n\n      <AddAuctionModal\n        show={showAddAuctionModal}\n        handleClose={() => setShowAddAuctionModal(false)}\n        assetOwner={addr}\n      />\n    </>\n  );\n}\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":38,"nodeType":"57","messageId":"58","endLine":1,"endColumn":44},{"ruleId":"55","severity":1,"message":"59","line":4,"column":3,"nodeType":"57","messageId":"58","endLine":4,"endColumn":8},{"ruleId":"55","severity":1,"message":"60","line":19,"column":17,"nodeType":"57","messageId":"58","endLine":19,"endColumn":27},{"ruleId":"55","severity":1,"message":"61","line":21,"column":25,"nodeType":"57","messageId":"58","endLine":21,"endColumn":43},{"ruleId":"55","severity":1,"message":"62","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":19},{"ruleId":"55","severity":1,"message":"63","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":12},{"ruleId":"55","severity":1,"message":"64","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":23},{"ruleId":"55","severity":1,"message":"65","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"66","line":2,"column":26,"nodeType":"57","messageId":"58","endLine":2,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":28,"column":19,"nodeType":"69","endLine":28,"endColumn":71},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Table' is defined but never used.","'setBidData' is assigned a value but never used.","'setTransactionData' is assigned a value but never used.","'MainAuction' is defined but never used.","'Web3' is defined but never used.","'Button' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]