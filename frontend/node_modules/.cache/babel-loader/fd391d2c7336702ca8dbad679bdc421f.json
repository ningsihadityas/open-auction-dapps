{"ast":null,"code":"import Web3 from 'web3';\nimport MainAuction from 'contracts/MainAuction.json';\nimport BiddingContract from 'contracts/Bidding.json';\nimport AuctionContract from 'contracts/AuctionContract.json';\nlet selectedAccount;\nexport const init = async () => {\n  let provider = window.ethereum;\n\n  if (typeof provider !== 'undefined') {\n    provider.on('accountsChanged', () => window.location.reload());\n    return provider.request({\n      method: 'eth_requestAccounts'\n    }).then(accounts => {\n      selectedAccount = accounts[0];\n      return selectedAccount;\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n}; // export const getBiddingListData = async () => {\n//   let provider = window.ethereum;\n//   let mainAuctionContract;\n//   const web3 = new Web3(provider);\n//   const networkId = await web3.eth.net.getId();\n// };\n\nexport const getAuctionData = async () => {\n  let provider = window.ethereum;\n  let auctionContract; // marketContract\n\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  let auctions = [];\n  auctionContract = new web3.eth.Contract(AuctionContract.abi, AuctionContract.networks[networkId].address);\n  let auctionCount = await auctionContract.methods.auctionCount().call(); // Load products\n\n  for (var i = 1; i <= auctionCount; i++) {\n    const auction = await auctionContract.methods.auctions(i).call(); //  let millis = parseFloat(auction.timestamp) * 1000;\n\n    let startPrice = web3.utils.fromWei(auction.startPrice.toString(), 'ether'); // let bidding2 = await mainAuctionContract.methods.biddingList(i).call();\n    //  let auction_time = new Date(millis).toLocaleString();\n\n    auctions.push({\n      auctionId: auction.id,\n      assetName: auction.assetName,\n      assetDetail: auction.assetDetail,\n      startPrice: startPrice,\n      assetOwner: auction.assetOwner,\n      //ownerDeposite: auction.ownerDeposite,\n      auctionDuration: auction.auctionDuration,\n      auctionStatus: auction.active\n    });\n  }\n\n  return auctions; // return mainAuctionContract.methods.auctions(1);\n};\nexport const createAuction = async (assetName, assetDetail, assetOwner, startPrice, // ownerDeposite,\nauctionDuration) => {\n  let provider = window.ethereum; // let mainAuctionContract;\n\n  let auctionContract;\n  const web3 = new Web3(provider); // const networkId = await web3.eth.net.getId();\n\n  const networkId = await web3.eth.net.getId();\n  let depositePrice = Web3.utils.fromWei(startPrice, 'wei'); //var depositPrice = document.getElementById('deposit_value').value;\n  //depositPrice = web3.toWei(depositPrice, 'ether');\n\n  auctionContract = new web3.eth.Contract(AuctionContract.abi, AuctionContract.networks[networkId].address);\n  return auctionContract.methods.createAuction(assetName, assetDetail, startPrice, auctionDuration).send({\n    from: assetOwner,\n    value: depositePrice\n  }).then(auctionData => {\n    return auctionData;\n  }).catch(err => {\n    return err.message;\n  });\n}; // export const biddingList = async () => {\n//   let provider = window.ethereum;\n//   let mainAuctionContract;\n//   let biddingContract;\n//   const web3 = new Web3(provider);\n//   const networkId = await web3.eth.net.getId();\n//   let biddingList = [];\n//   mainAuctionContract = new web3.eth.Contract(\n//     MainAuction.abi,\n//     MainAuction.networks[networkId].address\n//   );\n//   biddingContract = new web3.eth.Contract(\n//     BiddingContract.abi,\n//     BiddingContract.networks[networkId].address\n//   );\n//   // return mainAuctionContract.methods\n//   //   .createAuction(assetName, assetDetail, startPrice, auctionDuration)\n//   //   .send({ from: assetOwner, value: depositePrice })\n//   //   .then((auctionData) => {\n//   //     return auctionData;\n//   //   })\n//   //   .catch((err) => {\n//   //     return err.message;\n//   //   });\n//   for (var j = 0; j <= biddingList; j++) {\n//     let bidding = await mainAuctionContract.methods.biddingList(j).call();\n//     biddingList.push({\n//       biddingId: bidding.Id,\n//     });\n//   }\n//   return biddingList;\n// };\n// export const bidOnAuction = async (auctionId, bidder, amount) => {\n//   let provider = window.ethereum;\n//   let auctionContract;\n//   const web3 = new Web3(provider);\n//   // const networkId = await web3.eth.net.getId();\n//   const networkId = await web3.eth.net.getId();\n//   let amount2 = Web3.utils.fromWei(amount, 'wei');\n//   auctionContract = new web3.eth.Contract(\n//     AuctionContract.abi,\n//     AuctionContract.networks[networkId].address\n//   );\n//   return AuctionContract.methods\n//     .bidOnAuction(auctionId)\n//     .send({ from: bidder, value: amount2 })\n//     .then((bidData) => {\n//       return bidData;\n//     })\n//     .catch((err) => {\n//       return err.message;\n//     });\n// };\n\nfunction bidOnAuction() {\n  var bid = document.getElementById('bid_value').value;\n  bid = web3.toWei(bid, 'ether');\n\n  if (bid < auction['currentBid']) {\n    setStatus('Bid has to be at least ' + auction['currentBid'], 'error');\n    return;\n  }\n\n  var gas = 1400000;\n  auctionContract.bidOnAuction(auction['auctionId'], {\n    from: account,\n    value: bid,\n    gas: gas\n  }).then(function (txnId) {\n    console.log('Bid txnId: ' + txnId);\n    web3.eth.getTransactionReceipt(txnId, function (err, txnReceipt) {\n      if (txnReceipt.gasUsed == gas) {\n        console.log('We had a failed bid ' + txnReceipt);\n        setStatus('Bid failed', 'error');\n        hideSpinner();\n      } else {\n        console.log('We had a successful bid ' + txnReceipt);\n        setStatus('Bid succeeded!', 'success');\n        hideSpinner();\n      }\n    });\n    refreshAuction();\n  });\n}","map":{"version":3,"names":["Web3","MainAuction","BiddingContract","AuctionContract","selectedAccount","init","provider","window","ethereum","on","location","reload","request","method","then","accounts","catch","err","console","log","web3","currentProvider","getAuctionData","auctionContract","networkId","eth","net","getId","auctions","Contract","abi","networks","address","auctionCount","methods","call","i","auction","startPrice","utils","fromWei","toString","push","auctionId","id","assetName","assetDetail","assetOwner","auctionDuration","auctionStatus","active","createAuction","depositePrice","send","from","value","auctionData","message","bidOnAuction","bid","document","getElementById","toWei","setStatus","gas","account","txnId","getTransactionReceipt","txnReceipt","gasUsed","hideSpinner","refreshAuction"],"sources":["/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/Web3Client.js"],"sourcesContent":["import Web3 from 'web3';\nimport MainAuction from 'contracts/MainAuction.json';\nimport BiddingContract from 'contracts/Bidding.json';\nimport AuctionContract from 'contracts/AuctionContract.json';\n\nlet selectedAccount;\n\nexport const init = async () => {\n  let provider = window.ethereum;\n\n  if (typeof provider !== 'undefined') {\n    provider.on('accountsChanged', () => window.location.reload());\n    return provider\n      .request({ method: 'eth_requestAccounts' })\n      .then((accounts) => {\n        selectedAccount = accounts[0];\n        return selectedAccount;\n      })\n      .catch((err) => {\n        console.log(err);\n        return;\n      });\n  } else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider);\n  } else {\n    console.log(\n      'Non-Ethereum browser detected. You should consider trying MetaMask!'\n    );\n  }\n};\n\n// export const getBiddingListData = async () => {\n//   let provider = window.ethereum;\n//   let mainAuctionContract;\n//   const web3 = new Web3(provider);\n//   const networkId = await web3.eth.net.getId();\n// };\n\nexport const getAuctionData = async () => {\n  let provider = window.ethereum;\n  let auctionContract; // marketContract\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  let auctions = [];\n\n  auctionContract = new web3.eth.Contract(\n    AuctionContract.abi,\n    AuctionContract.networks[networkId].address\n  );\n\n  let auctionCount = await auctionContract.methods.auctionCount().call();\n  // Load products\n  for (var i = 1; i <= auctionCount; i++) {\n    const auction = await auctionContract.methods.auctions(i).call();\n    //  let millis = parseFloat(auction.timestamp) * 1000;\n    let startPrice = web3.utils.fromWei(auction.startPrice.toString(), 'ether');\n    // let bidding2 = await mainAuctionContract.methods.biddingList(i).call();\n    //  let auction_time = new Date(millis).toLocaleString();\n\n    auctions.push({\n      auctionId: auction.id,\n      assetName: auction.assetName,\n      assetDetail: auction.assetDetail,\n      startPrice: startPrice,\n      assetOwner: auction.assetOwner,\n      //ownerDeposite: auction.ownerDeposite,\n      auctionDuration: auction.auctionDuration,\n      auctionStatus: auction.active,\n    });\n  }\n  return auctions;\n  // return mainAuctionContract.methods.auctions(1);\n};\n\nexport const createAuction = async (\n  assetName,\n  assetDetail,\n  assetOwner,\n  startPrice,\n  // ownerDeposite,\n  auctionDuration\n) => {\n  let provider = window.ethereum;\n  // let mainAuctionContract;\n  let auctionContract;\n  const web3 = new Web3(provider);\n  // const networkId = await web3.eth.net.getId();\n  const networkId = await web3.eth.net.getId();\n  let depositePrice = Web3.utils.fromWei(startPrice, 'wei');\n\n  //var depositPrice = document.getElementById('deposit_value').value;\n  //depositPrice = web3.toWei(depositPrice, 'ether');\n\n  auctionContract = new web3.eth.Contract(\n    AuctionContract.abi,\n    AuctionContract.networks[networkId].address\n  );\n  return auctionContract.methods\n    .createAuction(assetName, assetDetail, startPrice, auctionDuration)\n    .send({ from: assetOwner, value: depositePrice })\n    .then((auctionData) => {\n      return auctionData;\n    })\n    .catch((err) => {\n      return err.message;\n    });\n};\n\n// export const biddingList = async () => {\n//   let provider = window.ethereum;\n//   let mainAuctionContract;\n//   let biddingContract;\n//   const web3 = new Web3(provider);\n//   const networkId = await web3.eth.net.getId();\n\n//   let biddingList = [];\n\n//   mainAuctionContract = new web3.eth.Contract(\n//     MainAuction.abi,\n//     MainAuction.networks[networkId].address\n//   );\n\n//   biddingContract = new web3.eth.Contract(\n//     BiddingContract.abi,\n//     BiddingContract.networks[networkId].address\n//   );\n\n//   // return mainAuctionContract.methods\n//   //   .createAuction(assetName, assetDetail, startPrice, auctionDuration)\n//   //   .send({ from: assetOwner, value: depositePrice })\n//   //   .then((auctionData) => {\n//   //     return auctionData;\n//   //   })\n//   //   .catch((err) => {\n//   //     return err.message;\n//   //   });\n\n//   for (var j = 0; j <= biddingList; j++) {\n//     let bidding = await mainAuctionContract.methods.biddingList(j).call();\n\n//     biddingList.push({\n//       biddingId: bidding.Id,\n//     });\n//   }\n//   return biddingList;\n// };\n\n// export const bidOnAuction = async (auctionId, bidder, amount) => {\n//   let provider = window.ethereum;\n//   let auctionContract;\n//   const web3 = new Web3(provider);\n//   // const networkId = await web3.eth.net.getId();\n//   const networkId = await web3.eth.net.getId();\n//   let amount2 = Web3.utils.fromWei(amount, 'wei');\n\n//   auctionContract = new web3.eth.Contract(\n//     AuctionContract.abi,\n//     AuctionContract.networks[networkId].address\n//   );\n//   return AuctionContract.methods\n//     .bidOnAuction(auctionId)\n//     .send({ from: bidder, value: amount2 })\n//     .then((bidData) => {\n//       return bidData;\n//     })\n//     .catch((err) => {\n//       return err.message;\n//     });\n// };\n\nfunction bidOnAuction() {\n  var bid = document.getElementById('bid_value').value;\n  bid = web3.toWei(bid, 'ether');\n\n  if (bid < auction['currentBid']) {\n    setStatus('Bid has to be at least ' + auction['currentBid'], 'error');\n    return;\n  }\n\n  var gas = 1400000;\n  auctionContract\n    .bidOnAuction(auction['auctionId'], { from: account, value: bid, gas: gas })\n    .then(function (txnId) {\n      console.log('Bid txnId: ' + txnId);\n      web3.eth.getTransactionReceipt(txnId, function (err, txnReceipt) {\n        if (txnReceipt.gasUsed == gas) {\n          console.log('We had a failed bid ' + txnReceipt);\n          setStatus('Bid failed', 'error');\n          hideSpinner();\n        } else {\n          console.log('We had a successful bid ' + txnReceipt);\n          setStatus('Bid succeeded!', 'success');\n          hideSpinner();\n        }\n      });\n      refreshAuction();\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}