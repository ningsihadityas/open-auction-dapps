{"ast":null,"code":"var _jsxFileName = \"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Table, Button, Card, Row, Col, Stack, Form } from 'react-bootstrap';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport { getAuctionData, getBidData } from './Web3Client';\nimport BiddingContract from 'contracts/Bidding.json';\nimport Web3 from 'web3';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { placeBid } from './Web3Client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainMenu(_ref) {\n  _s();\n\n  let {\n    bidding\n  } = _ref;\n  //   let [productData, setProductData] = useState([]);\n  let [auctionData, setAuctionData] = useState([]);\n  let [bidData, setBidData] = useState([]);\n  let [transactionData, setTransactionData] = useState({});\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  const [bidAmounts, setBidAmounts] = useState(); //userDonations\n\n  const [web3, setWeb3] = useState();\n  const [contract, setContract] = useState();\n  const [accounts, setAccounts] = useState();\n  let [assetName, setAssetName] = useState();\n  let [assetDetail, setAssetDetail] = useState();\n  const [startPrice, setStartPrice] = useState(); // const [bidder, setBidder] = useState(null);\n\n  const [auctionDuration, setAuctionDuration] = useState();\n  const [bidCount, setBidCount] = useState();\n  const [biddingAmount, setBiddingAmount] = useState(); //donationAmount\n  // const ethAmount = (biddingAmount / exchangeRate || 0).toFixed(4);\n\n  async function getListingData() {\n    let auctions = await getAuctionData();\n    let reversed = auctions.reverse(); // let bids = await getBidData();\n\n    setAuctionData(reversed); // setBidData();\n  }\n\n  useEffect(() => {\n    getListingData();\n    console.log(auctionData);\n\n    if (bidding) {\n      init(bidding);\n    }\n\n    console.log('bidding ' + assetName);\n  }, [bidding]); // useEffect(() => {\n  //   if (bidding) {\n  //     init(bidding);\n  //   }\n  // }, [bidding]);\n\n  const init = async bidding => {\n    try {\n      const fund = bidding;\n      let provider = window.ethereum;\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = BiddingContract.networks[networkId];\n      const accounts = await web3.eth.getAccounts();\n      const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n      setWeb3(web3);\n      setContract(instance);\n      setAccounts(accounts);\n      let name = await instance.methods.assetName().call();\n      let description = await instance.methods.assetDetail().call();\n      let price = await instance.methods.startPrice().call();\n      let duration = await instance.methods.auctionDuration().call();\n      setAssetName(name);\n      setAssetDetail(description);\n      console.log(assetDetail);\n      console.log(description); // setStartPrice(web3.utils.fromWei(price, 'ether'));\n\n      setStartPrice(price);\n      setAuctionDuration(duration); // var exchangeRate = 0;\n      // await cc\n      //   .price('ETH', ['USD'])\n      //   .then((prices) => {\n      //     exchangeRate = prices.USD;\n      //     setExchangeRate(prices.USD);\n      //   })\n      //   .catch(console.error);\n    } catch (error) {\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  }; // useEffect(() => {\n  //   getListingData(); // getTableData\n  //   init(bidding);\n  // }, []);\n  // const placeBid = async () => {\n  //   let provider = window.ethereum;\n  //   let biddingContract;\n  //   const networkId = await web3.eth.net.getId();\n  //   const web3 = new Web3(provider);\n  //   biddingContract = new web3.eth.Contract(\n  //     BiddingContract.abi,\n  //     BiddingContract.networks[networkId].address\n  //   );\n  //   const highestBid = await biddingContract.methods.highestBidder().call();\n  //   const highestBidder = await biddingContract.methods.highestBid().call();\n  //   const bid = Web3.utils.toWei(highestBid, 'ether');\n  //   // await BiddingContract.methods.placeBid().send({\n  //   //   from: bidder,\n  //   //   value: bid,\n  //   //   gas: 650000,\n  //   // });\n  //   //setOpen(false);\n  //   return BiddingContract.methods\n  //     .bid()\n  //     .send({ from: highestBidder, value: bid })\n  //     .then((bidData) => {\n  //       return bidData;\n  //     })\n  //     .catch((err) => {\n  //       return err.message;\n  //     });\n  // };\n\n\n  window.ethereum.on('accountsChanged', function (accounts) {\n    window.location.reload();\n  }); // let bidAmount = useRef();\n  //HANDLE SUBMIT\n  // async function handleSubmit(bidder) {\n  //   const amountBid = bidAmount.current.value;\n  //   //const amountBid2 = Web3.utils.toWei(amountBid.toString(), 'ether');\n  //   let bidData = await placeBid()\n  //     .then({\n  //       from: bidder,\n  //       value: amountBid,\n  //       to: auctionData.bidding,\n  //     })\n  //     .catch((err) => {\n  //       if (err) {\n  //         // alert(err);\n  //         console.log(err);\n  //         // window.location.reload();\n  //       }\n  //     });\n  //   return bidData;\n  // }\n  // const AuctionCard = ({ bidding }) => {\n  //   const [web3, setWeb3] = useState(null);\n  //   const [contract, setContract] = useState(null);\n  //   const [accounts, setAccounts] = useState(null);\n  //   const [assetName, setAssetName] = useState(null);\n  //   const [assetDetail, setAssetDetail] = useState(null);\n  //   const [startPrice, setStartPrice] = useState(null);\n  //   const [bidder, setBidder] = useState(null);\n  //   const [auctionDuration, setAuctionDuration] = useState(null);\n  //   const [bidCount, setBidCount] = useState(null);\n  //setContract(instance);\n  //const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n  //   useEffect(() => {\n  //     // getListingData(); // getTableData\n  //     if (bidding) {\n  //       init(bidding);\n  //     }\n  //   }, [bidding]);\n  // };\n  // const renderBidsList = () => {\n  //   var bids = bidAmounts;\n  //   if (bids === null) {\n  //     return null;\n  //   }\n  //   const totalBids = bids.length;\n  //   let bidList = [];\n  //   var i;\n  //   for (i = 0; i < totalBids; i++) {\n  //     const ethAmount = web3.utils.fromWei(bids.values[i], 'ether');\n  //     //const bidAmount = ethAmount; //*exchangeRate\n  //     const bidDate = bids.dates[i];\n  //     bidList.push({ biddingAmount: bidAmount.toFixed(2), date: bidDate });\n  //   }\n  //   return bidList.map((bid) => {\n  //     return (\n  //       <div className='donation-list'>\n  //         <p>${bid.biddingAmount}</p>\n  //         <Button variant='contained' color='primary'>\n  //           <Link\n  //             className='donation-receipt-link'\n  //             to={{\n  //               pathname: '/receipts',\n  //               state: {\n  //                 fund: assetName,\n  //                 bid: bid.biddingAmount,\n  //                 date: bid.date,\n  //               },\n  //             }}>\n  //             Request Receipt\n  //           </Link>\n  //         </Button>\n  //       </div>\n  //     );\n  //   });\n  // };\n  // console.log(auctionData);\n  // console.log(biddingAmount);\n  // console.log(bidData);\n  // console.log(bidAmount);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    style: {\n      backgroundColor: '#494978',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SuccessAlertModal, {\n      show: showAlertSuccess,\n      handleClose: () => {\n        setShowAlertSuccess(false);\n        window.location.reload();\n      },\n      transaction: transactionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        padding: '10px'\n      },\n      children: [\"return (\", /*#__PURE__*/_jsxDEV(Col, {\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            backgroundColor: '#F6F6FE',\n            color: 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h5\",\n            children: assetName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Description: \", assetDetail]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Start Price: \", startPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Auction Duration: \", auctionDuration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"horizontal\",\n              gap: 3,\n              style: {\n                paddingTop: '5px',\n                paddingBottom: '30px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                className: \"me-auto\",\n                placeholder: \"Place Your Bid\",\n                onChange: () => {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button // onClick={() => handleSubmit(bidder)}\n              , {\n                variant: \"warning\",\n                children: \"Bid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"horizontal\",\n              gap: 3,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                children: \"Finalize Auction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                children: \"Withdraw\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), \");\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainMenu, \"B9FXNL/3wH33aoyj60xXoTTvJr8=\");\n\n_c = MainMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainMenu\");","map":{"version":3,"names":["React","useState","useEffect","Container","Table","Button","Card","Row","Col","Stack","Form","SuccessAlertModal","getAuctionData","getBidData","BiddingContract","Web3","Link","useRef","placeBid","MainMenu","bidding","auctionData","setAuctionData","bidData","setBidData","transactionData","setTransactionData","showAlertSuccess","setShowAlertSuccess","bidAmounts","setBidAmounts","web3","setWeb3","contract","setContract","accounts","setAccounts","assetName","setAssetName","assetDetail","setAssetDetail","startPrice","setStartPrice","auctionDuration","setAuctionDuration","bidCount","setBidCount","biddingAmount","setBiddingAmount","getListingData","auctions","reversed","reverse","console","log","init","fund","provider","window","ethereum","networkId","eth","net","getId","deployedNetwork","networks","getAccounts","instance","Contract","abi","name","methods","call","description","price","duration","error","alert","on","location","reload","backgroundColor","borderRadius","padding","color","paddingTop","paddingBottom"],"sources":["/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Table,\n  Button,\n  Card,\n  Row,\n  Col,\n  Stack,\n  Form,\n} from 'react-bootstrap';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport { getAuctionData, getBidData } from './Web3Client';\nimport BiddingContract from 'contracts/Bidding.json';\nimport Web3 from 'web3';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { placeBid } from './Web3Client';\n\nexport default function MainMenu({ bidding }) {\n  //   let [productData, setProductData] = useState([]);\n  let [auctionData, setAuctionData] = useState([]);\n  let [bidData, setBidData] = useState([]);\n  let [transactionData, setTransactionData] = useState({});\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n\n  const [bidAmounts, setBidAmounts] = useState(); //userDonations\n  const [web3, setWeb3] = useState();\n  const [contract, setContract] = useState();\n  const [accounts, setAccounts] = useState();\n  let [assetName, setAssetName] = useState();\n  let [assetDetail, setAssetDetail] = useState();\n  const [startPrice, setStartPrice] = useState();\n  // const [bidder, setBidder] = useState(null);\n  const [auctionDuration, setAuctionDuration] = useState();\n  const [bidCount, setBidCount] = useState();\n  const [biddingAmount, setBiddingAmount] = useState(); //donationAmount\n  // const ethAmount = (biddingAmount / exchangeRate || 0).toFixed(4);\n  async function getListingData() {\n    let auctions = await getAuctionData();\n    let reversed = auctions.reverse();\n    // let bids = await getBidData();\n\n    setAuctionData(reversed);\n    // setBidData();\n  }\n\n  useEffect(() => {\n    getListingData();\n    console.log(auctionData);\n\n    if (bidding) {\n      init(bidding);\n    }\n    console.log('bidding ' + assetName);\n  }, [bidding]);\n\n  // useEffect(() => {\n\n  //   if (bidding) {\n  //     init(bidding);\n  //   }\n  // }, [bidding]);\n\n  const init = async (bidding) => {\n    try {\n      const fund = bidding;\n      let provider = window.ethereum;\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = BiddingContract.networks[networkId];\n      const accounts = await web3.eth.getAccounts();\n      const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n      setWeb3(web3);\n      setContract(instance);\n      setAccounts(accounts);\n\n      let name = await instance.methods.assetName().call();\n      let description = await instance.methods.assetDetail().call();\n      let price = await instance.methods.startPrice().call();\n      let duration = await instance.methods.auctionDuration().call();\n\n      setAssetName(name);\n      setAssetDetail(description);\n      console.log(assetDetail);\n      console.log(description);\n      // setStartPrice(web3.utils.fromWei(price, 'ether'));\n      setStartPrice(price);\n      setAuctionDuration(duration);\n\n      // var exchangeRate = 0;\n      // await cc\n      //   .price('ETH', ['USD'])\n      //   .then((prices) => {\n      //     exchangeRate = prices.USD;\n      //     setExchangeRate(prices.USD);\n      //   })\n      //   .catch(console.error);\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  // useEffect(() => {\n  //   getListingData(); // getTableData\n  //   init(bidding);\n  // }, []);\n\n  // const placeBid = async () => {\n  //   let provider = window.ethereum;\n  //   let biddingContract;\n\n  //   const networkId = await web3.eth.net.getId();\n  //   const web3 = new Web3(provider);\n\n  //   biddingContract = new web3.eth.Contract(\n  //     BiddingContract.abi,\n  //     BiddingContract.networks[networkId].address\n  //   );\n\n  //   const highestBid = await biddingContract.methods.highestBidder().call();\n  //   const highestBidder = await biddingContract.methods.highestBid().call();\n\n  //   const bid = Web3.utils.toWei(highestBid, 'ether');\n  //   // await BiddingContract.methods.placeBid().send({\n  //   //   from: bidder,\n  //   //   value: bid,\n  //   //   gas: 650000,\n  //   // });\n  //   //setOpen(false);\n\n  //   return BiddingContract.methods\n  //     .bid()\n  //     .send({ from: highestBidder, value: bid })\n  //     .then((bidData) => {\n  //       return bidData;\n  //     })\n  //     .catch((err) => {\n  //       return err.message;\n  //     });\n  // };\n\n  window.ethereum.on('accountsChanged', function (accounts) {\n    window.location.reload();\n  });\n\n  // let bidAmount = useRef();\n\n  //HANDLE SUBMIT\n  // async function handleSubmit(bidder) {\n  //   const amountBid = bidAmount.current.value;\n  //   //const amountBid2 = Web3.utils.toWei(amountBid.toString(), 'ether');\n\n  //   let bidData = await placeBid()\n  //     .then({\n  //       from: bidder,\n  //       value: amountBid,\n  //       to: auctionData.bidding,\n  //     })\n  //     .catch((err) => {\n  //       if (err) {\n  //         // alert(err);\n  //         console.log(err);\n  //         // window.location.reload();\n  //       }\n  //     });\n  //   return bidData;\n  // }\n\n  // const AuctionCard = ({ bidding }) => {\n  //   const [web3, setWeb3] = useState(null);\n  //   const [contract, setContract] = useState(null);\n  //   const [accounts, setAccounts] = useState(null);\n  //   const [assetName, setAssetName] = useState(null);\n  //   const [assetDetail, setAssetDetail] = useState(null);\n  //   const [startPrice, setStartPrice] = useState(null);\n  //   const [bidder, setBidder] = useState(null);\n  //   const [auctionDuration, setAuctionDuration] = useState(null);\n  //   const [bidCount, setBidCount] = useState(null);\n\n  //setContract(instance);\n  //const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n\n  //   useEffect(() => {\n  //     // getListingData(); // getTableData\n\n  //     if (bidding) {\n  //       init(bidding);\n  //     }\n  //   }, [bidding]);\n\n  // };\n\n  // const renderBidsList = () => {\n  //   var bids = bidAmounts;\n  //   if (bids === null) {\n  //     return null;\n  //   }\n\n  //   const totalBids = bids.length;\n  //   let bidList = [];\n  //   var i;\n  //   for (i = 0; i < totalBids; i++) {\n  //     const ethAmount = web3.utils.fromWei(bids.values[i], 'ether');\n  //     //const bidAmount = ethAmount; //*exchangeRate\n  //     const bidDate = bids.dates[i];\n  //     bidList.push({ biddingAmount: bidAmount.toFixed(2), date: bidDate });\n  //   }\n\n  //   return bidList.map((bid) => {\n  //     return (\n  //       <div className='donation-list'>\n  //         <p>${bid.biddingAmount}</p>\n  //         <Button variant='contained' color='primary'>\n  //           <Link\n  //             className='donation-receipt-link'\n  //             to={{\n  //               pathname: '/receipts',\n  //               state: {\n  //                 fund: assetName,\n  //                 bid: bid.biddingAmount,\n  //                 date: bid.date,\n  //               },\n  //             }}>\n  //             Request Receipt\n  //           </Link>\n  //         </Button>\n  //       </div>\n  //     );\n  //   });\n  // };\n\n  // console.log(auctionData);\n  // console.log(biddingAmount);\n  // console.log(bidData);\n  // console.log(bidAmount);\n\n  return (\n    <Container\n      className='mt-4'\n      style={{\n        backgroundColor: '#494978',\n        borderRadius: '8px',\n      }}>\n      <SuccessAlertModal\n        show={showAlertSuccess}\n        handleClose={() => {\n          setShowAlertSuccess(false);\n          window.location.reload();\n        }}\n        transaction={transactionData}\n      />\n\n      <Row style={{ padding: '10px' }}>\n        {/* {auctionData.map((item) => { */}\n        return (\n        <Col style={{ padding: '10px' }}>\n          <Card style={{ backgroundColor: '#F6F6FE', color: 'black' }}>\n            <Card.Header as='h5'>{assetName}</Card.Header>\n            <Card.Body>\n              <Card.Text>Description: {assetDetail}</Card.Text>\n              {/* <Card.Text>Asset Owner: {item.assetOwner}</Card.Text> */}\n              <Card.Text>Start Price: {startPrice}</Card.Text>\n              <Card.Text>Auction Duration: {auctionDuration}</Card.Text>\n              <Stack\n                direction='horizontal'\n                gap={3}\n                style={{\n                  paddingTop: '5px',\n                  paddingBottom: '30px',\n                }}>\n                <Form.Control\n                  type='number'\n                  className='me-auto'\n                  placeholder='Place Your Bid'\n                  onChange={() => {}}\n                />\n                <Button\n                  // onClick={() => handleSubmit(bidder)}\n                  variant='warning'>\n                  Bid\n                </Button>\n              </Stack>\n              <Stack direction='horizontal' gap={3}>\n                <Button variant='danger'>Finalize Auction</Button>\n                <div className='vr' />\n                <Button variant='outline-danger'>Withdraw</Button>\n              </Stack>\n              {/* {bidData.map((index) => {\n                    return (\n                      <col>\n                        <Stack\n                          direction='horizontal'\n                          gap={3}\n                          style={{\n                            paddingTop: '5px',\n                            paddingBottom: '30px',\n                          }}>\n                          <Form.Control\n                            type='number'\n                            className='me-auto'\n                            placeholder='Place Your Bid'\n                            ref={bidAmount}\n                          />\n                          <Button\n                            onClick={() => handleSubmit(bidder)}\n                            variant='warning'>\n                            Bid\n                          </Button>\n                        </Stack>\n                        <Stack direction='horizontal' gap={3}>\n                          <Button variant='danger'>Finalize Auction</Button>\n                          <div className='vr' />\n                          <Button variant='outline-danger'>Withdraw</Button>\n                        </Stack>\n                      </col>\n                    );\n                  })} */}\n\n              {/* <Button variant='primary'>Go somewhere</Button> */}\n              {/* <Button\n                    variant='primary'\n                    type='submit'\n                    onClick={() => handleAddAuction(assetOwner)}>\n                    Add Asset\n                  </Button> */}\n            </Card.Body>\n          </Card>\n\n          {/* <div>\n                <h3>My donations</h3>\n                {renderBidsList()}\n              </div> */}\n        </Col>\n        );\n      </Row>\n    </Container>\n  );\n}\n"],"mappings":"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AMP,QAAQ,CAACI,OAAT,CAAiB9B,UAAjB,GAA8B+B,IAA9B,EAAlB;MACA,IAAIG,QAAQ,GAAG,MAAMR,QAAQ,CAACI,OAAT,CAAiB5B,eAAjB,GAAmC6B,IAAnC,EAArB;MAEAlC,YAAY,CAACgC,IAAD,CAAZ;MACA9B,cAAc,CAACiC,WAAD,CAAd;MACApB,OAAO,CAACC,GAAR,CAAYf,WAAZ;MACAc,OAAO,CAACC,GAAR,CAAYmB,WAAZ,EApBE,CAqBF;;MACA/B,aAAa,CAACgC,KAAD,CAAb;MACA9B,kBAAkB,CAAC+B,QAAD,CAAlB,CAvBE,CAyBF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAjCD,CAiCE,OAAOC,KAAP,EAAc;MACdC,KAAK,CACF,wEADE,CAAL;MAGAxB,OAAO,CAACuB,KAAR,CAAcA,KAAd;IACD;EACF,CAxCD,CA7C4C,CAuF5C;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAlB,MAAM,CAACC,QAAP,CAAgBmB,EAAhB,CAAmB,iBAAnB,EAAsC,UAAU3C,QAAV,EAAoB;IACxDuB,MAAM,CAACqB,QAAP,CAAgBC,MAAhB;EACD,CAFD,EA9H4C,CAkI5C;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,SAAD;IACE,SAAS,EAAC,MADZ;IAEE,KAAK,EAAE;MACLC,eAAe,EAAE,SADZ;MAELC,YAAY,EAAE;IAFT,CAFT;IAAA,wBAME,QAAC,iBAAD;MACE,IAAI,EAAEvD,gBADR;MAEE,WAAW,EAAE,MAAM;QACjBC,mBAAmB,CAAC,KAAD,CAAnB;QACA8B,MAAM,CAACqB,QAAP,CAAgBC,MAAhB;MACD,CALH;MAME,WAAW,EAAEvD;IANf;MAAA;MAAA;MAAA;IAAA,QANF,eAeE,QAAC,GAAD;MAAK,KAAK,EAAE;QAAE0D,OAAO,EAAE;MAAX,CAAZ;MAAA,oCAGE,QAAC,GAAD;QAAK,KAAK,EAAE;UAAEA,OAAO,EAAE;QAAX,CAAZ;QAAA,uBACE,QAAC,IAAD;UAAM,KAAK,EAAE;YAAEF,eAAe,EAAE,SAAnB;YAA8BG,KAAK,EAAE;UAArC,CAAb;UAAA,wBACE,QAAC,IAAD,CAAM,MAAN;YAAa,EAAE,EAAC,IAAhB;YAAA,UAAsB/C;UAAtB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,IAAN;YAAA,wBACE,QAAC,IAAD,CAAM,IAAN;cAAA,4BAAyBE,WAAzB;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAGE,QAAC,IAAD,CAAM,IAAN;cAAA,4BAAyBE,UAAzB;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE,QAAC,IAAD,CAAM,IAAN;cAAA,iCAA8BE,eAA9B;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE,QAAC,KAAD;cACE,SAAS,EAAC,YADZ;cAEE,GAAG,EAAE,CAFP;cAGE,KAAK,EAAE;gBACL0C,UAAU,EAAE,KADP;gBAELC,aAAa,EAAE;cAFV,CAHT;cAAA,wBAOE,QAAC,IAAD,CAAM,OAAN;gBACE,IAAI,EAAC,QADP;gBAEE,SAAS,EAAC,SAFZ;gBAGE,WAAW,EAAC,gBAHd;gBAIE,QAAQ,EAAE,MAAM,CAAE;cAJpB;gBAAA;gBAAA;gBAAA;cAAA,QAPF,eAaE,QAAC,MAAD,CACE;cADF;gBAEE,OAAO,EAAC,SAFV;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAbF;YAAA;cAAA;cAAA;cAAA;YAAA,QALF,eAwBE,QAAC,KAAD;cAAO,SAAS,EAAC,YAAjB;cAA8B,GAAG,EAAE,CAAnC;cAAA,wBACE,QAAC,MAAD;gBAAQ,OAAO,EAAC,QAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAK,SAAS,EAAC;cAAf;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAGE,QAAC,MAAD;gBAAQ,OAAO,EAAC,gBAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHF;YAAA;cAAA;cAAA;cAAA;YAAA,QAxBF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqGD;;GAlUuBnE,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}