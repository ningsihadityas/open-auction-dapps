{"ast":null,"code":"var _jsxFileName = \"/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Table, Button, Card, Row, Col, Stack, Form } from 'react-bootstrap';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport { getAuctionData, getBidData } from './Web3Client';\nimport BiddingContract from 'contracts/Bidding.json';\nimport Web3 from 'web3';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { placeBid } from './Web3Client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainMenu(_ref) {\n  _s();\n\n  let {\n    addr,\n    bidding\n  } = _ref;\n  //   let [productData, setProductData] = useState([]);\n  let [auctionData, setAuctionData] = useState([]);\n  let [bidData, setBidData] = useState([]);\n  let [transactionData, setTransactionData] = useState({});\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n  const [bidAmounts, setBidAmounts] = useState(null); //userDonations\n\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [assetName, setAssetName] = useState(null);\n  const [assetDetail, setAssetDetail] = useState(null);\n  const [startPrice, setStartPrice] = useState(null);\n  const [bidder, setBidder] = useState(null);\n  const [auctionDuration, setAuctionDuration] = useState(null);\n  const [bidCount, setBidCount] = useState(null);\n  const [biddingAmount, setBiddingAmount] = useState(null); //donationAmount\n\n  async function getListingData() {\n    let auctions = await getAuctionData();\n    let reversed = auctions.reverse();\n    let bids = await getBidData();\n    setAuctionData(reversed);\n    setBidData();\n  }\n\n  useEffect(() => {\n    getListingData(); // getTableData\n  }, []); // const placeBid = async () => {\n  //   let provider = window.ethereum;\n  //   let biddingContract;\n  //   const networkId = await web3.eth.net.getId();\n  //   const web3 = new Web3(provider);\n  //   biddingContract = new web3.eth.Contract(\n  //     BiddingContract.abi,\n  //     BiddingContract.networks[networkId].address\n  //   );\n  //   const highestBid = await biddingContract.methods.highestBidder().call();\n  //   const highestBidder = await biddingContract.methods.highestBid().call();\n  //   const bid = Web3.utils.toWei(highestBid, 'ether');\n  //   // await BiddingContract.methods.placeBid().send({\n  //   //   from: bidder,\n  //   //   value: bid,\n  //   //   gas: 650000,\n  //   // });\n  //   //setOpen(false);\n  //   return BiddingContract.methods\n  //     .bid()\n  //     .send({ from: highestBidder, value: bid })\n  //     .then((bidData) => {\n  //       return bidData;\n  //     })\n  //     .catch((err) => {\n  //       return err.message;\n  //     });\n  // };\n\n  let bidAmount = useRef();\n\n  async function handleSubmit(bidder) {\n    const amountBid = bidAmount.current.value;\n    const amountBid2 = Web3.utils.toWei(amountBid.toString(), 'ether');\n    let bidData = await placeBid(bidder, amountBid2).catch(err => {\n      if (err) {\n        // alert(err);\n        console.log(err); // window.location.reload();\n      }\n    });\n  } // const AuctionCard = ({ bidding }) => {\n  //   const [web3, setWeb3] = useState(null);\n  //   const [contract, setContract] = useState(null);\n  //   const [accounts, setAccounts] = useState(null);\n  //   const [assetName, setAssetName] = useState(null);\n  //   const [assetDetail, setAssetDetail] = useState(null);\n  //   const [startPrice, setStartPrice] = useState(null);\n  //   const [bidder, setBidder] = useState(null);\n  //   const [auctionDuration, setAuctionDuration] = useState(null);\n  //   const [bidCount, setBidCount] = useState(null);\n  //setContract(instance);\n  //const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n  //   useEffect(() => {\n  //     // getListingData(); // getTableData\n  //     if (bidding) {\n  //       init(bidding);\n  //     }\n  //   }, [bidding]);\n\n\n  const init = async bidding => {\n    try {\n      const fund = bidding;\n      const provider = window.ethereum;\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = BiddingContract.networks[networkId];\n      const accounts = await web3.eth.getAccounts();\n      const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n      setWeb3(web3);\n      setContract(instance);\n      setAccounts(accounts);\n      const name = await instance.methods.assetName().call();\n      const description = await instance.methods.assetDetail().call();\n      const price = await instance.methods.startPrice().call();\n      const duration = await instance.methods.auctionDuration().call();\n      setAssetName(name);\n      setAssetDetail(description);\n      setStartPrice(web3.utils.fromWei(price, 'ether'));\n      setAuctionDuration(duration);\n    } catch (error) {\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n  }; // };\n\n\n  const renderBidsList = () => {\n    var bids = bidAmounts;\n\n    if (bids === null) {\n      return null;\n    }\n\n    const totalBids = bids.length;\n    let bidList = [];\n    var i;\n\n    for (i = 0; i < totalBids; i++) {\n      const ethAmount = web3.utils.fromWei(bids.values[i], 'ether');\n      const bidAmount = ethAmount; //*exchangeRate\n\n      const bidDate = bids.dates[i];\n      bidList.push({\n        biddingAmount: bidAmount.toFixed(2),\n        date: bidDate\n      });\n    }\n\n    return bidList.map(bid => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"donation-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", bid.biddingAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"donation-receipt-link\",\n            to: {\n              pathname: '/receipts',\n              state: {\n                fund: assetName,\n                bid: bid.biddingAmount,\n                date: bid.date\n              }\n            },\n            children: \"Request Receipt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  console.log(auctionData);\n  console.log(biddingAmount);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    style: {\n      backgroundColor: '#494978',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SuccessAlertModal, {\n      show: showAlertSuccess,\n      handleClose: () => {\n        setShowAlertSuccess(false);\n        window.location.reload();\n      },\n      transaction: transactionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        padding: '10px'\n      },\n      children: auctionData.map(item => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            padding: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: '#F6F6FE',\n              color: 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: item.assetName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Description: \", item.assetDetail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Asset Owner: \", item.assetOwner]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Start Price: \", item.startPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Auction Duration: \", item.auctionDuration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"horizontal\",\n                gap: 3,\n                style: {\n                  paddingTop: '5px',\n                  paddingBottom: '30px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  className: \"me-auto\",\n                  placeholder: \"Place Your Bid\",\n                  ref: bidAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleSubmit(bidder),\n                  variant: \"warning\",\n                  children: \"Bid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"horizontal\",\n                gap: 3,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  children: \"Finalize Auction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  children: \"Withdraw\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, item.auctionId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"My donations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), renderBidsList()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainMenu, \"p5cOFAcYPhq0n1kDeGxLOLui6mI=\");\n\n_c = MainMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainMenu\");","map":{"version":3,"names":["React","useState","useEffect","Container","Table","Button","Card","Row","Col","Stack","Form","SuccessAlertModal","getAuctionData","getBidData","BiddingContract","Web3","Link","useRef","placeBid","MainMenu","addr","bidding","auctionData","setAuctionData","bidData","setBidData","transactionData","setTransactionData","showAlertSuccess","setShowAlertSuccess","bidAmounts","setBidAmounts","web3","setWeb3","contract","setContract","accounts","setAccounts","assetName","setAssetName","assetDetail","setAssetDetail","startPrice","setStartPrice","bidder","setBidder","auctionDuration","setAuctionDuration","bidCount","setBidCount","biddingAmount","setBiddingAmount","getListingData","auctions","reversed","reverse","bids","bidAmount","handleSubmit","amountBid","current","value","amountBid2","utils","toWei","toString","catch","err","console","log","init","fund","provider","window","ethereum","networkId","eth","net","getId","deployedNetwork","networks","getAccounts","instance","Contract","abi","name","methods","call","description","price","duration","fromWei","error","alert","renderBidsList","totalBids","length","bidList","i","ethAmount","values","bidDate","dates","push","toFixed","date","map","bid","pathname","state","backgroundColor","borderRadius","location","reload","padding","item","color","assetOwner","paddingTop","paddingBottom","auctionId"],"sources":["/Users/adityas/Desktop/KULIAH/SMT8/open-auction-dapps/frontend/src/components/MainMenu.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Table,\n  Button,\n  Card,\n  Row,\n  Col,\n  Stack,\n  Form,\n} from 'react-bootstrap';\nimport SuccessAlertModal from './SuccessAlertModal';\nimport { getAuctionData, getBidData } from './Web3Client';\nimport BiddingContract from 'contracts/Bidding.json';\nimport Web3 from 'web3';\nimport { Link } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { placeBid } from './Web3Client';\n\nexport default function MainMenu({ addr, bidding }) {\n  //   let [productData, setProductData] = useState([]);\n  let [auctionData, setAuctionData] = useState([]);\n  let [bidData, setBidData] = useState([]);\n  let [transactionData, setTransactionData] = useState({});\n  const [showAlertSuccess, setShowAlertSuccess] = useState(false);\n\n  const [bidAmounts, setBidAmounts] = useState(null); //userDonations\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [assetName, setAssetName] = useState(null);\n  const [assetDetail, setAssetDetail] = useState(null);\n  const [startPrice, setStartPrice] = useState(null);\n  const [bidder, setBidder] = useState(null);\n  const [auctionDuration, setAuctionDuration] = useState(null);\n  const [bidCount, setBidCount] = useState(null);\n  const [biddingAmount, setBiddingAmount] = useState(null); //donationAmount\n\n  async function getListingData() {\n    let auctions = await getAuctionData();\n    let reversed = auctions.reverse();\n    let bids = await getBidData();\n\n    setAuctionData(reversed);\n    setBidData();\n  }\n\n  useEffect(() => {\n    getListingData(); // getTableData\n  }, []);\n\n  // const placeBid = async () => {\n  //   let provider = window.ethereum;\n  //   let biddingContract;\n\n  //   const networkId = await web3.eth.net.getId();\n  //   const web3 = new Web3(provider);\n\n  //   biddingContract = new web3.eth.Contract(\n  //     BiddingContract.abi,\n  //     BiddingContract.networks[networkId].address\n  //   );\n\n  //   const highestBid = await biddingContract.methods.highestBidder().call();\n  //   const highestBidder = await biddingContract.methods.highestBid().call();\n\n  //   const bid = Web3.utils.toWei(highestBid, 'ether');\n  //   // await BiddingContract.methods.placeBid().send({\n  //   //   from: bidder,\n  //   //   value: bid,\n  //   //   gas: 650000,\n  //   // });\n  //   //setOpen(false);\n\n  //   return BiddingContract.methods\n  //     .bid()\n  //     .send({ from: highestBidder, value: bid })\n  //     .then((bidData) => {\n  //       return bidData;\n  //     })\n  //     .catch((err) => {\n  //       return err.message;\n  //     });\n  // };\n  let bidAmount = useRef();\n\n  async function handleSubmit(bidder) {\n    const amountBid = bidAmount.current.value;\n    const amountBid2 = Web3.utils.toWei(amountBid.toString(), 'ether');\n\n    let bidData = await placeBid(bidder, amountBid2).catch((err) => {\n      if (err) {\n        // alert(err);\n        console.log(err);\n        // window.location.reload();\n      }\n    });\n  }\n  // const AuctionCard = ({ bidding }) => {\n  //   const [web3, setWeb3] = useState(null);\n  //   const [contract, setContract] = useState(null);\n  //   const [accounts, setAccounts] = useState(null);\n  //   const [assetName, setAssetName] = useState(null);\n  //   const [assetDetail, setAssetDetail] = useState(null);\n  //   const [startPrice, setStartPrice] = useState(null);\n  //   const [bidder, setBidder] = useState(null);\n  //   const [auctionDuration, setAuctionDuration] = useState(null);\n  //   const [bidCount, setBidCount] = useState(null);\n\n  //setContract(instance);\n  //const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n\n  //   useEffect(() => {\n  //     // getListingData(); // getTableData\n\n  //     if (bidding) {\n  //       init(bidding);\n  //     }\n  //   }, [bidding]);\n\n  const init = async (bidding) => {\n    try {\n      const fund = bidding;\n      const provider = window.ethereum;\n      const web3 = new Web3(provider);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = BiddingContract.networks[networkId];\n      const accounts = await web3.eth.getAccounts();\n      const instance = new web3.eth.Contract(BiddingContract.abi, fund);\n      setWeb3(web3);\n      setContract(instance);\n      setAccounts(accounts);\n\n      const name = await instance.methods.assetName().call();\n      const description = await instance.methods.assetDetail().call();\n      const price = await instance.methods.startPrice().call();\n      const duration = await instance.methods.auctionDuration().call();\n\n      setAssetName(name);\n      setAssetDetail(description);\n      setStartPrice(web3.utils.fromWei(price, 'ether'));\n      setAuctionDuration(duration);\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n  // };\n\n  const renderBidsList = () => {\n    var bids = bidAmounts;\n    if (bids === null) {\n      return null;\n    }\n\n    const totalBids = bids.length;\n    let bidList = [];\n    var i;\n    for (i = 0; i < totalBids; i++) {\n      const ethAmount = web3.utils.fromWei(bids.values[i], 'ether');\n      const bidAmount = ethAmount; //*exchangeRate\n      const bidDate = bids.dates[i];\n      bidList.push({ biddingAmount: bidAmount.toFixed(2), date: bidDate });\n    }\n\n    return bidList.map((bid) => {\n      return (\n        <div className='donation-list'>\n          <p>${bid.biddingAmount}</p>\n          <Button variant='contained' color='primary'>\n            <Link\n              className='donation-receipt-link'\n              to={{\n                pathname: '/receipts',\n                state: {\n                  fund: assetName,\n                  bid: bid.biddingAmount,\n                  date: bid.date,\n                },\n              }}>\n              Request Receipt\n            </Link>\n          </Button>\n        </div>\n      );\n    });\n  };\n\n  console.log(auctionData);\n  console.log(biddingAmount);\n\n  return (\n    <Container\n      className='mt-4'\n      style={{\n        backgroundColor: '#494978',\n        borderRadius: '8px',\n      }}>\n      <SuccessAlertModal\n        show={showAlertSuccess}\n        handleClose={() => {\n          setShowAlertSuccess(false);\n          window.location.reload();\n        }}\n        transaction={transactionData}\n      />\n\n      <Row style={{ padding: '10px' }}>\n        {auctionData.map((item) => {\n          return (\n            <Col style={{ padding: '10px' }}>\n              <Card\n                style={{ backgroundColor: '#F6F6FE', color: 'black' }}\n                key={item.auctionId}>\n                <Card.Header as='h5'>{item.assetName}</Card.Header>\n                <Card.Body>\n                  <Card.Text>Description: {item.assetDetail}</Card.Text>\n                  <Card.Text>Asset Owner: {item.assetOwner}</Card.Text>\n                  <Card.Text>Start Price: {item.startPrice}</Card.Text>\n                  <Card.Text>\n                    Auction Duration: {item.auctionDuration}\n                  </Card.Text>\n                  <Stack\n                    direction='horizontal'\n                    gap={3}\n                    style={{\n                      paddingTop: '5px',\n                      paddingBottom: '30px',\n                    }}>\n                    <Form.Control\n                      type='number'\n                      className='me-auto'\n                      placeholder='Place Your Bid'\n                      ref={bidAmount}\n                    />\n                    <Button\n                      onClick={() => handleSubmit(bidder)}\n                      variant='warning'>\n                      Bid\n                    </Button>\n                  </Stack>\n                  <Stack direction='horizontal' gap={3}>\n                    <Button variant='danger'>Finalize Auction</Button>\n                    <div className='vr' />\n                    <Button variant='outline-danger'>Withdraw</Button>\n                  </Stack>\n                  {/* {bidData.map((index) => {\n                    return (\n                      <col>\n                        <Stack\n                          direction='horizontal'\n                          gap={3}\n                          style={{\n                            paddingTop: '5px',\n                            paddingBottom: '30px',\n                          }}>\n                          <Form.Control\n                            type='number'\n                            className='me-auto'\n                            placeholder='Place Your Bid'\n                            ref={bidAmount}\n                          />\n                          <Button\n                            onClick={() => handleSubmit(bidder)}\n                            variant='warning'>\n                            Bid\n                          </Button>\n                        </Stack>\n                        <Stack direction='horizontal' gap={3}>\n                          <Button variant='danger'>Finalize Auction</Button>\n                          <div className='vr' />\n                          <Button variant='outline-danger'>Withdraw</Button>\n                        </Stack>\n                      </col>\n                    );\n                  })} */}\n\n                  {/* <Button variant='primary'>Go somewhere</Button> */}\n                  {/* <Button\n                    variant='primary'\n                    type='submit'\n                    onClick={() => handleAddAuction(assetOwner)}>\n                    Add Asset\n                  </Button> */}\n                </Card.Body>\n              </Card>\n\n              <div>\n                <h3>My donations</h3>\n                {renderBidsList()}\n              </div>\n            </Col>\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}